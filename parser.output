Terminals which are not used

   COMMA


Rules never reduced

    7 VarDecl: /* empty */


State 0 conflicts: 7 shift/reduce, 1 reduce/reduce
State 10 conflicts: 7 shift/reduce, 3 reduce/reduce
State 14 conflicts: 6 shift/reduce
State 72 conflicts: 8 shift/reduce, 1 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: Decl DeclList
    3         | Decl

    4 Decl: FunDecl
    5     | VarDecl SEMICOLON
    6     | StmtList

    7 VarDecl: /* empty */
    8        | TYPE ID
    9        | TYPE ID STARTARRAY Primary ENDARRAY

   10 @1: /* empty */

   11 FunDecl: TYPE ID STARTPASS @1 ParamDeclList ENDPASS Block

   12 ParamDeclList: /* empty */

   13 Block: STARTFUN ENDFUN
   14      | STARTFUN DeclList ENDFUN

   15 StmtList: /* empty */
   16         | Stmt StmtList

   17 Stmt: SEMICOLON
   18     | Expr SEMICOLON
   19     | IfExpr
   20     | Condition

   21 Expr: ID EQ Iteration
   22     | RETURN Primary
   23     | ID EQ ID
   24     | ID EQ NUMBER
   25     | WRITE ID
   26     | ID STARTARRAY NUMBER ENDARRAY EQ NUMBER
   27     | ID STARTARRAY NUMBER ENDARRAY EQ ID
   28     | WRITE ID STARTARRAY NUMBER ENDARRAY
   29     | ID STARTPASS ENDPASS

   30 Condition: NUMBER GREATERTHAN NUMBER
   31          | NUMBER LESSTHAN NUMBER
   32          | ID GREATERTHAN NUMBER
   33          | ID LESSTHAN NUMBER
   34          | NUMBER LESSTHAN ID
   35          | NUMBER GREATERTHAN ID
   36          | ID GREATERTHAN ID
   37          | ID LESSTHAN ID

   38 IfExpr: IF STARTPASS Condition ENDPASS Block
   39       | IF STARTPASS Condition ENDPASS Block ELSE Block

   40 Iteration: ID PLUS NUMBER
   41          | ID PLUS ID
   42          | NUMBER PLUS NUMBER

   43 Primary: /* empty */
   44        | ID
   45        | NUMBER
   46        | STARTFUN Expr ENDFUN


Terminals, with rules where they appear

$end (0) 0
error (256)
TYPE (258) 8 9 11
ID (259) 8 9 11 21 23 24 25 26 27 28 29 32 33 34 35 36 37 40 41 44
SEMICOLON (260) 5 17 18
STARTFUN (261) 13 14 46
ENDFUN (262) 13 14 46
STARTPASS (263) 11 29 38 39
ENDPASS (264) 11 29 38 39
STARTARRAY (265) 9 26 27 28
ENDARRAY (266) 9 26 27 28
EQ (267) 21 23 24 26 27
PLUS (268) 40 41 42
COMMA (269)
NUMBER (270) 24 26 27 28 30 31 32 33 34 35 40 42 45
WRITE (271) 25 28
RETURN (272) 22
IF (273) 38 39
ELSE (274) 39
GREATERTHAN (275) 30 32 35 36
LESSTHAN (276) 31 33 34 37


Nonterminals, with rules where they appear

$accept (22)
    on left: 0
Program (23)
    on left: 1, on right: 0
DeclList (24)
    on left: 2 3, on right: 1 2 14
Decl (25)
    on left: 4 5 6, on right: 2 3
VarDecl (26)
    on left: 7 8 9, on right: 5
FunDecl (27)
    on left: 11, on right: 4
@1 (28)
    on left: 10, on right: 11
ParamDeclList (29)
    on left: 12, on right: 11
Block (30)
    on left: 13 14, on right: 11 38 39
StmtList (31)
    on left: 15 16, on right: 6 16
Stmt (32)
    on left: 17 18 19 20, on right: 16
Expr (33)
    on left: 21 22 23 24 25 26 27 28 29, on right: 18 46
Condition (34)
    on left: 30 31 32 33 34 35 36 37, on right: 20 38 39
IfExpr (35)
    on left: 38 39, on right: 19
Iteration (36)
    on left: 40 41 42, on right: 21
Primary (37)
    on left: 43 44 45 46, on right: 9 22


state 0

    0 $accept: . Program $end

    TYPE       shift, and go to state 1
    ID         shift, and go to state 2
    SEMICOLON  shift, and go to state 3
    NUMBER     shift, and go to state 4
    WRITE      shift, and go to state 5
    RETURN     shift, and go to state 6
    IF         shift, and go to state 7

    TYPE       [reduce using rule 15 (StmtList)]
    ID         [reduce using rule 15 (StmtList)]
    SEMICOLON  [reduce using rule 7 (VarDecl)]
    SEMICOLON  [reduce using rule 15 (StmtList)]
    NUMBER     [reduce using rule 15 (StmtList)]
    WRITE      [reduce using rule 15 (StmtList)]
    RETURN     [reduce using rule 15 (StmtList)]
    IF         [reduce using rule 15 (StmtList)]
    $default   reduce using rule 15 (StmtList)

    Program    go to state 8
    DeclList   go to state 9
    Decl       go to state 10
    VarDecl    go to state 11
    FunDecl    go to state 12
    StmtList   go to state 13
    Stmt       go to state 14
    Expr       go to state 15
    Condition  go to state 16
    IfExpr     go to state 17


state 1

    8 VarDecl: TYPE . ID
    9        | TYPE . ID STARTARRAY Primary ENDARRAY
   11 FunDecl: TYPE . ID STARTPASS @1 ParamDeclList ENDPASS Block

    ID  shift, and go to state 18


state 2

   21 Expr: ID . EQ Iteration
   23     | ID . EQ ID
   24     | ID . EQ NUMBER
   26     | ID . STARTARRAY NUMBER ENDARRAY EQ NUMBER
   27     | ID . STARTARRAY NUMBER ENDARRAY EQ ID
   29     | ID . STARTPASS ENDPASS
   32 Condition: ID . GREATERTHAN NUMBER
   33          | ID . LESSTHAN NUMBER
   36          | ID . GREATERTHAN ID
   37          | ID . LESSTHAN ID

    STARTPASS    shift, and go to state 19
    STARTARRAY   shift, and go to state 20
    EQ           shift, and go to state 21
    GREATERTHAN  shift, and go to state 22
    LESSTHAN     shift, and go to state 23


state 3

   17 Stmt: SEMICOLON .

    $default  reduce using rule 17 (Stmt)


state 4

   30 Condition: NUMBER . GREATERTHAN NUMBER
   31          | NUMBER . LESSTHAN NUMBER
   34          | NUMBER . LESSTHAN ID
   35          | NUMBER . GREATERTHAN ID

    GREATERTHAN  shift, and go to state 24
    LESSTHAN     shift, and go to state 25


state 5

   25 Expr: WRITE . ID
   28     | WRITE . ID STARTARRAY NUMBER ENDARRAY

    ID  shift, and go to state 26


state 6

   22 Expr: RETURN . Primary

    ID        shift, and go to state 27
    STARTFUN  shift, and go to state 28
    NUMBER    shift, and go to state 29

    $default  reduce using rule 43 (Primary)

    Primary  go to state 30


state 7

   38 IfExpr: IF . STARTPASS Condition ENDPASS Block
   39       | IF . STARTPASS Condition ENDPASS Block ELSE Block

    STARTPASS  shift, and go to state 31


state 8

    0 $accept: Program . $end

    $end  shift, and go to state 32


state 9

    1 Program: DeclList .

    $default  reduce using rule 1 (Program)


state 10

    2 DeclList: Decl . DeclList
    3         | Decl .

    TYPE       shift, and go to state 1
    ID         shift, and go to state 2
    SEMICOLON  shift, and go to state 3
    NUMBER     shift, and go to state 4
    WRITE      shift, and go to state 5
    RETURN     shift, and go to state 6
    IF         shift, and go to state 7

    $end       reduce using rule 3 (DeclList)
    $end       [reduce using rule 15 (StmtList)]
    TYPE       [reduce using rule 15 (StmtList)]
    ID         [reduce using rule 15 (StmtList)]
    SEMICOLON  [reduce using rule 7 (VarDecl)]
    SEMICOLON  [reduce using rule 15 (StmtList)]
    ENDFUN     reduce using rule 3 (DeclList)
    ENDFUN     [reduce using rule 15 (StmtList)]
    NUMBER     [reduce using rule 15 (StmtList)]
    WRITE      [reduce using rule 15 (StmtList)]
    RETURN     [reduce using rule 15 (StmtList)]
    IF         [reduce using rule 15 (StmtList)]
    $default   reduce using rule 3 (DeclList)

    DeclList   go to state 33
    Decl       go to state 10
    VarDecl    go to state 11
    FunDecl    go to state 12
    StmtList   go to state 13
    Stmt       go to state 14
    Expr       go to state 15
    Condition  go to state 16
    IfExpr     go to state 17


state 11

    5 Decl: VarDecl . SEMICOLON

    SEMICOLON  shift, and go to state 34


state 12

    4 Decl: FunDecl .

    $default  reduce using rule 4 (Decl)


state 13

    6 Decl: StmtList .

    $default  reduce using rule 6 (Decl)


state 14

   16 StmtList: Stmt . StmtList

    ID         shift, and go to state 2
    SEMICOLON  shift, and go to state 3
    NUMBER     shift, and go to state 4
    WRITE      shift, and go to state 5
    RETURN     shift, and go to state 6
    IF         shift, and go to state 7

    ID         [reduce using rule 15 (StmtList)]
    SEMICOLON  [reduce using rule 15 (StmtList)]
    NUMBER     [reduce using rule 15 (StmtList)]
    WRITE      [reduce using rule 15 (StmtList)]
    RETURN     [reduce using rule 15 (StmtList)]
    IF         [reduce using rule 15 (StmtList)]
    $default   reduce using rule 15 (StmtList)

    StmtList   go to state 35
    Stmt       go to state 14
    Expr       go to state 15
    Condition  go to state 16
    IfExpr     go to state 17


state 15

   18 Stmt: Expr . SEMICOLON

    SEMICOLON  shift, and go to state 36


state 16

   20 Stmt: Condition .

    $default  reduce using rule 20 (Stmt)


state 17

   19 Stmt: IfExpr .

    $default  reduce using rule 19 (Stmt)


state 18

    8 VarDecl: TYPE ID .
    9        | TYPE ID . STARTARRAY Primary ENDARRAY
   11 FunDecl: TYPE ID . STARTPASS @1 ParamDeclList ENDPASS Block

    STARTPASS   shift, and go to state 37
    STARTARRAY  shift, and go to state 38

    $default  reduce using rule 8 (VarDecl)


state 19

   29 Expr: ID STARTPASS . ENDPASS

    ENDPASS  shift, and go to state 39


state 20

   26 Expr: ID STARTARRAY . NUMBER ENDARRAY EQ NUMBER
   27     | ID STARTARRAY . NUMBER ENDARRAY EQ ID

    NUMBER  shift, and go to state 40


state 21

   21 Expr: ID EQ . Iteration
   23     | ID EQ . ID
   24     | ID EQ . NUMBER

    ID      shift, and go to state 41
    NUMBER  shift, and go to state 42

    Iteration  go to state 43


state 22

   32 Condition: ID GREATERTHAN . NUMBER
   36          | ID GREATERTHAN . ID

    ID      shift, and go to state 44
    NUMBER  shift, and go to state 45


state 23

   33 Condition: ID LESSTHAN . NUMBER
   37          | ID LESSTHAN . ID

    ID      shift, and go to state 46
    NUMBER  shift, and go to state 47


state 24

   30 Condition: NUMBER GREATERTHAN . NUMBER
   35          | NUMBER GREATERTHAN . ID

    ID      shift, and go to state 48
    NUMBER  shift, and go to state 49


state 25

   31 Condition: NUMBER LESSTHAN . NUMBER
   34          | NUMBER LESSTHAN . ID

    ID      shift, and go to state 50
    NUMBER  shift, and go to state 51


state 26

   25 Expr: WRITE ID .
   28     | WRITE ID . STARTARRAY NUMBER ENDARRAY

    STARTARRAY  shift, and go to state 52

    $default  reduce using rule 25 (Expr)


state 27

   44 Primary: ID .

    $default  reduce using rule 44 (Primary)


state 28

   46 Primary: STARTFUN . Expr ENDFUN

    ID      shift, and go to state 53
    WRITE   shift, and go to state 5
    RETURN  shift, and go to state 6

    Expr  go to state 54


state 29

   45 Primary: NUMBER .

    $default  reduce using rule 45 (Primary)


state 30

   22 Expr: RETURN Primary .

    $default  reduce using rule 22 (Expr)


state 31

   38 IfExpr: IF STARTPASS . Condition ENDPASS Block
   39       | IF STARTPASS . Condition ENDPASS Block ELSE Block

    ID      shift, and go to state 55
    NUMBER  shift, and go to state 4

    Condition  go to state 56


state 32

    0 $accept: Program $end .

    $default  accept


state 33

    2 DeclList: Decl DeclList .

    $default  reduce using rule 2 (DeclList)


state 34

    5 Decl: VarDecl SEMICOLON .

    $default  reduce using rule 5 (Decl)


state 35

   16 StmtList: Stmt StmtList .

    $default  reduce using rule 16 (StmtList)


state 36

   18 Stmt: Expr SEMICOLON .

    $default  reduce using rule 18 (Stmt)


state 37

   11 FunDecl: TYPE ID STARTPASS . @1 ParamDeclList ENDPASS Block

    $default  reduce using rule 10 (@1)

    @1  go to state 57


state 38

    9 VarDecl: TYPE ID STARTARRAY . Primary ENDARRAY

    ID        shift, and go to state 27
    STARTFUN  shift, and go to state 28
    NUMBER    shift, and go to state 29

    $default  reduce using rule 43 (Primary)

    Primary  go to state 58


state 39

   29 Expr: ID STARTPASS ENDPASS .

    $default  reduce using rule 29 (Expr)


state 40

   26 Expr: ID STARTARRAY NUMBER . ENDARRAY EQ NUMBER
   27     | ID STARTARRAY NUMBER . ENDARRAY EQ ID

    ENDARRAY  shift, and go to state 59


state 41

   23 Expr: ID EQ ID .
   40 Iteration: ID . PLUS NUMBER
   41          | ID . PLUS ID

    PLUS  shift, and go to state 60

    $default  reduce using rule 23 (Expr)


state 42

   24 Expr: ID EQ NUMBER .
   42 Iteration: NUMBER . PLUS NUMBER

    PLUS  shift, and go to state 61

    $default  reduce using rule 24 (Expr)


state 43

   21 Expr: ID EQ Iteration .

    $default  reduce using rule 21 (Expr)


state 44

   36 Condition: ID GREATERTHAN ID .

    $default  reduce using rule 36 (Condition)


state 45

   32 Condition: ID GREATERTHAN NUMBER .

    $default  reduce using rule 32 (Condition)


state 46

   37 Condition: ID LESSTHAN ID .

    $default  reduce using rule 37 (Condition)


state 47

   33 Condition: ID LESSTHAN NUMBER .

    $default  reduce using rule 33 (Condition)


state 48

   35 Condition: NUMBER GREATERTHAN ID .

    $default  reduce using rule 35 (Condition)


state 49

   30 Condition: NUMBER GREATERTHAN NUMBER .

    $default  reduce using rule 30 (Condition)


state 50

   34 Condition: NUMBER LESSTHAN ID .

    $default  reduce using rule 34 (Condition)


state 51

   31 Condition: NUMBER LESSTHAN NUMBER .

    $default  reduce using rule 31 (Condition)


state 52

   28 Expr: WRITE ID STARTARRAY . NUMBER ENDARRAY

    NUMBER  shift, and go to state 62


state 53

   21 Expr: ID . EQ Iteration
   23     | ID . EQ ID
   24     | ID . EQ NUMBER
   26     | ID . STARTARRAY NUMBER ENDARRAY EQ NUMBER
   27     | ID . STARTARRAY NUMBER ENDARRAY EQ ID
   29     | ID . STARTPASS ENDPASS

    STARTPASS   shift, and go to state 19
    STARTARRAY  shift, and go to state 20
    EQ          shift, and go to state 21


state 54

   46 Primary: STARTFUN Expr . ENDFUN

    ENDFUN  shift, and go to state 63


state 55

   32 Condition: ID . GREATERTHAN NUMBER
   33          | ID . LESSTHAN NUMBER
   36          | ID . GREATERTHAN ID
   37          | ID . LESSTHAN ID

    GREATERTHAN  shift, and go to state 22
    LESSTHAN     shift, and go to state 23


state 56

   38 IfExpr: IF STARTPASS Condition . ENDPASS Block
   39       | IF STARTPASS Condition . ENDPASS Block ELSE Block

    ENDPASS  shift, and go to state 64


state 57

   11 FunDecl: TYPE ID STARTPASS @1 . ParamDeclList ENDPASS Block

    $default  reduce using rule 12 (ParamDeclList)

    ParamDeclList  go to state 65


state 58

    9 VarDecl: TYPE ID STARTARRAY Primary . ENDARRAY

    ENDARRAY  shift, and go to state 66


state 59

   26 Expr: ID STARTARRAY NUMBER ENDARRAY . EQ NUMBER
   27     | ID STARTARRAY NUMBER ENDARRAY . EQ ID

    EQ  shift, and go to state 67


state 60

   40 Iteration: ID PLUS . NUMBER
   41          | ID PLUS . ID

    ID      shift, and go to state 68
    NUMBER  shift, and go to state 69


state 61

   42 Iteration: NUMBER PLUS . NUMBER

    NUMBER  shift, and go to state 70


state 62

   28 Expr: WRITE ID STARTARRAY NUMBER . ENDARRAY

    ENDARRAY  shift, and go to state 71


state 63

   46 Primary: STARTFUN Expr ENDFUN .

    $default  reduce using rule 46 (Primary)


state 64

   38 IfExpr: IF STARTPASS Condition ENDPASS . Block
   39       | IF STARTPASS Condition ENDPASS . Block ELSE Block

    STARTFUN  shift, and go to state 72

    Block  go to state 73


state 65

   11 FunDecl: TYPE ID STARTPASS @1 ParamDeclList . ENDPASS Block

    ENDPASS  shift, and go to state 74


state 66

    9 VarDecl: TYPE ID STARTARRAY Primary ENDARRAY .

    $default  reduce using rule 9 (VarDecl)


state 67

   26 Expr: ID STARTARRAY NUMBER ENDARRAY EQ . NUMBER
   27     | ID STARTARRAY NUMBER ENDARRAY EQ . ID

    ID      shift, and go to state 75
    NUMBER  shift, and go to state 76


state 68

   41 Iteration: ID PLUS ID .

    $default  reduce using rule 41 (Iteration)


state 69

   40 Iteration: ID PLUS NUMBER .

    $default  reduce using rule 40 (Iteration)


state 70

   42 Iteration: NUMBER PLUS NUMBER .

    $default  reduce using rule 42 (Iteration)


state 71

   28 Expr: WRITE ID STARTARRAY NUMBER ENDARRAY .

    $default  reduce using rule 28 (Expr)


state 72

   13 Block: STARTFUN . ENDFUN
   14      | STARTFUN . DeclList ENDFUN

    TYPE       shift, and go to state 1
    ID         shift, and go to state 2
    SEMICOLON  shift, and go to state 3
    ENDFUN     shift, and go to state 77
    NUMBER     shift, and go to state 4
    WRITE      shift, and go to state 5
    RETURN     shift, and go to state 6
    IF         shift, and go to state 7

    TYPE       [reduce using rule 15 (StmtList)]
    ID         [reduce using rule 15 (StmtList)]
    SEMICOLON  [reduce using rule 7 (VarDecl)]
    SEMICOLON  [reduce using rule 15 (StmtList)]
    ENDFUN     [reduce using rule 15 (StmtList)]
    NUMBER     [reduce using rule 15 (StmtList)]
    WRITE      [reduce using rule 15 (StmtList)]
    RETURN     [reduce using rule 15 (StmtList)]
    IF         [reduce using rule 15 (StmtList)]

    DeclList   go to state 78
    Decl       go to state 10
    VarDecl    go to state 11
    FunDecl    go to state 12
    StmtList   go to state 13
    Stmt       go to state 14
    Expr       go to state 15
    Condition  go to state 16
    IfExpr     go to state 17


state 73

   38 IfExpr: IF STARTPASS Condition ENDPASS Block .
   39       | IF STARTPASS Condition ENDPASS Block . ELSE Block

    ELSE  shift, and go to state 79

    $default  reduce using rule 38 (IfExpr)


state 74

   11 FunDecl: TYPE ID STARTPASS @1 ParamDeclList ENDPASS . Block

    STARTFUN  shift, and go to state 72

    Block  go to state 80


state 75

   27 Expr: ID STARTARRAY NUMBER ENDARRAY EQ ID .

    $default  reduce using rule 27 (Expr)


state 76

   26 Expr: ID STARTARRAY NUMBER ENDARRAY EQ NUMBER .

    $default  reduce using rule 26 (Expr)


state 77

   13 Block: STARTFUN ENDFUN .

    $default  reduce using rule 13 (Block)


state 78

   14 Block: STARTFUN DeclList . ENDFUN

    ENDFUN  shift, and go to state 81


state 79

   39 IfExpr: IF STARTPASS Condition ENDPASS Block ELSE . Block

    STARTFUN  shift, and go to state 72

    Block  go to state 82


state 80

   11 FunDecl: TYPE ID STARTPASS @1 ParamDeclList ENDPASS Block .

    $default  reduce using rule 11 (FunDecl)


state 81

   14 Block: STARTFUN DeclList ENDFUN .

    $default  reduce using rule 14 (Block)


state 82

   39 IfExpr: IF STARTPASS Condition ENDPASS Block ELSE Block .

    $default  reduce using rule 39 (IfExpr)
